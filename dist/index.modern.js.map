{"version":3,"file":"index.modern.js","sources":["../src/utils/useShareForwardRef.js","../src/cache.js","../src/asyncMeasurer.js","../src/defaultMeasurementContainer.js","../src/index.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\n/**\n * This hooks allows the component to hold a ref while also exposing the same ref to its parents.\n * For example:\n * const MyComponent = (props, ref) => {\n *   const innerRef = useShareForwardedRef(ref);\n *\n *   ...\n *\n *   return <div ref={ref}>\n *    ...\n *   </div>\n * }\n *\n * https://gist.github.com/pie6k/b4717f392d773a71f67e110b42927fea\n */\nconst useShareForwardedRef = forwardedRef => {\n  // final ref that will share value with forward ref. this is the one we will attach to components\n  const innerRef = useRef(null);\n\n  // after every render - try to share current ref value with forwarded ref\n  useEffect(() => {\n    if (!forwardedRef) {\n      return;\n    }\n    if (typeof forwardedRef === \"function\") {\n      forwardedRef(innerRef.current);\n    } else {\n      forwardedRef.current = innerRef.current;\n    }\n  });\n\n  return innerRef;\n};\n\nexport default useShareForwardedRef;\n","/**\n * A very simple cache object which allows us to quickly clear all cached values.\n */\nexport default class Cache {\n  constructor(initialValues) {\n    this.values = { ...initialValues };\n  }\n\n  clearCache() {\n    this.values = {};\n  }\n}\n","/**\n * We are using reactDom.browserServer.renderToString and not reactDom.render in order to\n * allow us to measure the elements from a different components render function.\n * If you call reactDom.render from another components render function react will crash with the following\n * error:\n * Warning: Render methods should be a pure function of props and state;\n * triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n */\nimport { renderToString } from \"react-dom/server\";\n\nconst containerStyle = {\n  display: \"inline-block\",\n  position: \"absolute\",\n  visibility: \"hidden\",\n  zIndex: -1\n};\n\n/**\n * Creates the hidden div appended to the document body\n */\nexport const createMeasureLayer = debug => {\n  const container = document.createElement(\"div\");\n  container.setAttribute(\"id\", \"measure-layer\");\n  if (!debug) {\n    container.style = containerStyle;\n  }\n  const root = document.querySelector('#root');\n  root.appendChild(container);\n  return container;\n};\n\n/**\n * Destroy the measuring layer.\n * Should be called when the dynamic list is unmounted.\n */\nexport const destroyMeasureLayer = () => {\n  const container = document.querySelector(\"#measure-layer\");\n  if (container) {\n    container.parentNode.removeChild(container);\n  }\n};\n\n/**\n * Measure an element by temporary rendering it.\n */\nconst measureElement = (element, debug) => {\n  const container =\n    document.querySelector(\"#measure-layer\") || createMeasureLayer(debug);\n\n  // Renders the React element into the hidden div\n  container.innerHTML = renderToString(element);\n\n  // Gets the element size\n  const child = container.querySelector(\"#item-container\");\n  const height = child.offsetHeight;\n  const width = child.offsetWidth;\n\n  // Removes the element from the document\n  if (!debug) {\n    container.innerHTML = \"\";\n  }\n\n  return { height, width };\n};\n\nexport default measureElement;\n","import React from \"react\";\n\nexport const defaultMeasurementContainer = ({ style, children }) => (\n  <div style={style}> {children} </div>\n);\n","import React, { useEffect, forwardRef, useLayoutEffect } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport debounce from \"lodash.debounce\";\n\nimport useShareForwardedRef from \"./utils/useShareForwardRef\";\nimport Cache from \"./cache\";\nimport measureElement, { destroyMeasureLayer } from \"./asyncMeasurer\";\nimport { defaultMeasurementContainer } from \"./defaultMeasurementContainer\";\n\n/**\n * Create the dynamic list's cache object.\n * @param {Object} knownSizes a mapping between an items id and its size.\n */\nexport const createCache = (knownSizes = {}) => new Cache(knownSizes);\n\n/**\n * A virtualized list which handles item of varying sizes.\n * Read the implementation section in the README for additional information on the general algorithm.\n */\nconst DynamicList = (\n  {\n    children,\n    data,\n    height,\n    width,\n    cache,\n    lazyMeasurement = true,\n    recalculateItemsOnResize = { width: false, height: false },\n    measurementContainerElement = defaultMeasurementContainer,\n    debug = false,\n    ...variableSizeListProps\n  },\n  ref\n) => {\n  const listRef = useShareForwardedRef(ref);\n  const containerResizeDeps = [];\n\n  if (recalculateItemsOnResize.width) {\n    containerResizeDeps.push(width);\n  }\n  if (recalculateItemsOnResize.height) {\n    containerResizeDeps.push(height);\n  }\n\n  /**\n   * Measure a specific item.\n   * @param {number} index The index of the item in the data array.\n   */\n  const measureIndex = index => {\n    const ItemContainer = (\n      <div id=\"item-container\" style={{ overflow: \"auto\" }}>\n        {children({ index })}\n      </div>\n    );\n\n    const MeasurementContainer = measurementContainerElement({\n      style: { width, height, overflowY: \"scroll\" },\n      children: ItemContainer\n    });\n\n    const { height: measuredHeight } = measureElement(\n      MeasurementContainer,\n      debug\n    );\n    return measuredHeight;\n  };\n\n  /**\n   * Measure all of the items in the background.\n   * This could be a little tough in the site in the first seconds however it allows\n   * fast jumping.\n   */\n  const lazyCacheFill = () => {\n    data.forEach(({ id }, index) => {\n      // We use set timeout here in order to execute the measuring in a background thread.\n      setTimeout(() => {\n        if (!cache.values[id]) {\n          const height = measureIndex(index);\n\n          // Double check in case the main thread already populated this id\n          if (!cache.values[id]) {\n            cache.values[id] = height;\n          }\n        }\n      }, 0);\n    });\n  };\n\n  const handleListResize = debounce(() => {\n    if (listRef.current) {\n      cache.clearCache();\n      listRef.current.resetAfterIndex(0);\n      lazyCacheFill();\n    }\n  }, 50);\n\n  /**\n   * Initiate cache filling and handle cleanup of measurement layer.\n   */\n  useEffect(() => {\n    if (lazyMeasurement) {\n      lazyCacheFill();\n    }\n    return destroyMeasureLayer;\n  }, []);\n\n  /**\n   * Recalculate items size of the list size has changed.\n   */\n  useLayoutEffect(() => {\n    if (containerResizeDeps.length > 0) {\n      handleListResize();\n    }\n  }, containerResizeDeps);\n\n  /**\n   * In case the data length changed we need to reassign the current size to all of the indexes.\n   */\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.resetAfterIndex(0);\n    }\n  }, [data.length]);\n\n  /**\n   * Get the size of the item.\n   * @param {number} index The index of the item in the data array.\n   */\n  const itemSize = index => {\n    const { id } = data[index];\n    if (cache.values[id]) {\n      return cache.values[id];\n    } else {\n      const height = measureIndex(index);\n      cache.values[id] = height;\n      return height;\n    }\n  };\n\n  return (\n    <VariableSizeList\n      layout=\"vertical\"\n      ref={listRef}\n      itemSize={itemSize}\n      height={height}\n      width={width}\n      itemCount={data.length}\n      {...variableSizeListProps}\n    >\n      {children}\n    </VariableSizeList>\n  );\n};\n\nexport default forwardRef(DynamicList);\n"],"names":["useShareForwardedRef","forwardedRef","innerRef","useRef","useEffect","current","Cache","initialValues","values","clearCache","containerStyle","display","position","visibility","zIndex","createMeasureLayer","debug","container","document","createElement","setAttribute","style","root","querySelector","appendChild","destroyMeasureLayer","parentNode","removeChild","measureElement","element","innerHTML","renderToString","child","height","offsetHeight","width","offsetWidth","defaultMeasurementContainer","children","createCache","knownSizes","DynamicList","ref","data","cache","lazyMeasurement","recalculateItemsOnResize","measurementContainerElement","variableSizeListProps","listRef","containerResizeDeps","push","measureIndex","index","ItemContainer","overflow","MeasurementContainer","overflowY","measuredHeight","lazyCacheFill","forEach","id","setTimeout","handleListResize","debounce","resetAfterIndex","useLayoutEffect","length","itemSize","forwardRef"],"mappings":"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"}